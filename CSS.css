
http://webref.ru/css

...............................................

Система управления сайтом (CMS - Content Management System, движок для сайта) – программное обеспечение, позволяющее управлять содержимым и структурой сайта.
Систе́ма управле́ния содержи́мым (конте́нтом) (англ. Content management system, CMS) — информационная система или компьютерная программа, используемая для обеспечения и организации совместного процесса создания, редактирования и управления контентом (то есть содержимым).

......................................

В CSS работают правила приоритетов, если кратко:

самый низкий приоритет имеют стили браузера по умолчанию — в разных браузерах они могут отличаться, поэтому придумали CSS Reset (гуглится и юзается), и все будут на равных
чуть важнее — стили заданные пользователем в недрах настроек браузера, встречается редко
самые важные — стили автора странички, но и там всё идёт по порядку
самый низкий приоритет у тех, что лежат во внешнем подключённом файле
затем те, что встроили внутрь HTML с помощью тега <style>
потом те, что захардкодили плохие люди (не вы, вы так делать не будете) в атрибуте "style"
самый высокий приоритет у правил с меткой "!important"
при равенстве приоритетов, тапки у того, кто объявлен последним



Ещё анализируется специфичность селекторов, и тут считается следующим образом:

за каждый идентификатор получаем [1:0:0] (#id)

за каждый класс, либо псевдо класс — [0:1:0] (.my       :pseudo)

за каждый тег — [0:0:1] (div a)

При этом [1:0:0] > [0:x:y] > [0:0:x].

Пример селекторов, выстроенных по приоритету (первые важнее):

#my p#id — [2:0:1] 
#my #id — [2:0:0] 
#my p — [1:0:1] 
#id — [1:0:0]
.wrapper .content p — [0:2:1]
.content div p — [0:1:2]
.content p — [0:1:1] 
p — [0:0:1]




....................................

 <style type="text/css">        Атрибут type указывает на то, какой язык мы используем, — в данном случае CSS.
                               "text/css" - значение атрибута

 <a href="irule.html">          Атрибут href указывает на адрес назначения ссылки.

 <img src="sweetphoto.gif">     Атрибут src определяет имя файла с изображением,которое задается в теге img.

 <a> указатели </a>              Содержимое элемента ‹a›(без атрибутов) выступает в качестве метки для ссылки.

 <a href="../lounge.html"> Назад в гостевую </a>     поднятся на одну папку вверх(«..»),  если вы хотите подняться на две
                                                     папки, введите «../..», в этом случае необходимо
                                                     отделять каждую часть пути с помощью символа «/»

Если путь указывается от корня системы, то это путь абсолютный.
 Абсолютные адреса должны начинаться с указания протокола (обычно http://) и содержать имя сайта. Относительные ссылки ведут отсчет от корня сайта или текущего документа.
Абсолютные ссылки обычно применяются для указания документа на другом сетевом ресурсе, впрочем, допустимо делать абсолютные ссылки и внутри текущего сайта
примеры абсолютных путей:
/var/www/site/forum/index.php
/img/frame.gif
с:\windows\command.com

Если в начале пути корень не указать, то этот путь будет относительным
Самый простой пример относительного пути - это просто имя файла.
Если файл находится в том же каталоге, с которым работает программа - она его найдет, добавив текущий путь к имени файла.
примеры относительных путей:
file.php (фал лежит в той же папке)
./file.php (фал лежит в той же папке. такая запись иногда требуется в некоторых юникс системах)
images/picture.jpg (файл лежит в капке images, которая находится в текущей)
../file.php (файл лежит в папке, которая расположена на один уровень выше от текущей)
../../file.php (файл лежит в папке, которая расположена на два уровня выше от текущей)

И операционная система, и браузер, встретив относительный путь, достраивают его до абсолютного. но каждый - по-своему.

Некоторые браузеры налагают
ограничение на количество символов в пути.
Спецификация предостерегает от превыше-
ния лимита в 255 символов, хотя современ-
ные браузеры поддерживают более длинные
пути.
.................
Атрибут 'href' (hyper reference)— определяет размещение (URI) ресурса Web, определяя таким образом ссылку с текущего элемента (якоря-источника) на якорь назначения, определённый  этим атрибутом.Адрес, который должен использоваться для указания полного пути к файлам.
<a href="http://www.w3schools.com">Visit W3Schools</a>

Атрибут 'src' (это сокращение от слова source, т. е. источник.)- Адрес графического файла, который будет отображаться на веб-странице. Наиболее популярны файлы в формате GIF и JPEG.
 В качестве значения принимается полный или относительный путь к файлу.Нужен для указания местонахождения изображения, файла или страницы, на который ссылается тэг.

Импортирует файл со скриптами из внешнего файла. Как только внешние инструкции полностью загружаются, браузер обрабатывает их, словно они были внедрены в текущий документ. Файлы со скриптами JavaScript обычно имеют расширение js и могут размещаться в любом доступном месте.

Преимуществ использования внешних файлов несколько. Внешний файл после первого обращения сохраняется в кэше браузера и при последующих вызовах загружается быстрее. Кроме того, вызываемые функции удобно править в одном месте и код проще контролировать. Это особенно актуально, когда множество веб-страниц используют одни и те же скрипты.В качестве значения принимается полный или относительный путь к файлу. Файл должен иметь расширение .js.
 <script src="URL">...</script>
...........................


Для веб-страниц всегда используется символ «/» (прямой слеш).
Не используйте «\»(обратный слеш). В разных операционных системах применяются разные разделители (например, Windows использует «\» вместо «/»),
но когда речь идет о Сети, мы выбираем общий для всех разделитель и привязываемся к нему. Неважно, какая у вас операционная система, всегда используйте символ «/», указывая путь в HTML.
...................................................
						HTML

Вы используете <blockquote>,если вам нужно выделить как цитату текст длиной в целый абзац или больше, 
а <q> — если просто нужно выделить как цитату небольшую часть из текущего текста.

‹h1›, ‹h2›, ..., ‹h6›, ‹p› и ‹blockquote› , <ol>, <ul> и <li> — это блочные элементы.
‹q›, ‹a› , ‹em›(выделить текст),<strong>,‹img› — строчные элементы.

Запомните: блочные элементы отображаются отдельно, а строчные внутри основного текста страницы.
Рассмотрим, например, элемент <h1> (или <p>, или <a>). Основная цель элемента — разметить какое-то содержимое,к примеру:
<h1>Не ждите, заказывайте прямо сейчас</h1>

Что касается элемента <br>, то его цель — просто вставить разрыв строки в ваш текст.<br> — это элемент без содержимого.

вы всегда должны использовать элементы <ol>(упорядоченных) и <li> (или элементы могут находиться внутри других, или, как вы говорите,<ul>(неупорядоченных) и <li>) вместе. Ни один из этих элементов не имеет смысла без другого. Помните, что список — это группа элементов: элементы <li> используются для определения каждого пункта списка,а элемент <ol> — для их группировки.
Можно ли помещать текст или другие элементы внутрь элементов <ol> или <ul>?
 Нет, элементы <ol> и <ul> предназначены только для работы с элементами <li>.


Когда мы помещаем один элемент внутрь другого, мы называем это 'вложенностью'. Говорят,что «элемент <p> вложен в элемент <body>».
Вы уже видели множество элементов, вложенных в другие. Вы помещали элемент <body> в элемент <html>, элементы <p> — в элемент <body>,элемент <q> — в элемент <p> и т. д. Вы также
помещали элемент <head> в элемент <html>,а элемент <title> — в <head>. Таким образом и создаются HTML-страницы.

 <p> Я планирую поместить <em> это </em> в Twitter </p>

 &  —  специальный символ, именно в том, что это первый знак любой ссылки на символ.

У элемента <a> есть атрибут title, используемый именно для этой цели. Некоторые люди удивляются, услышав об этом атрибуте, потому что существует также элемент <title>, вложенный в элемент <head>.
<a href="http://wickedlysmart.com/buzz" title="Все самое интересное о кофеине">Все о кофеине</a>
Для большинства браузеров значение атрибута title отображается во всплывающей подсказке, когда вы наводите указатель мыши на ссылку. Помните,что браузеры для людей с ослабленным зрением могут воспроизводить такой заголовок вслух.

Ссылка на отдельный участок страницы     ( id     #)
 <h2 id="chai">Чай, $1.85</h2>
      ...
<a href="index.html#chai">Смотри страницу о чае</a>

<h3 id="Coffee">Кофе</h3>
<a href="http://wickedlysmart.com/buzz/index.html#Coffee" title="Читайте все самое важное о кофеине">Все о кофеине</a>   (c.179)

Чтобы открыть страницу в новом окне, вам нужно сообщить браузеру имя окна, в котором нужно открыть страницу.
Если в качестве значения атрибута target вы используете _blank, то браузер для каждой новой страницы всегда будет открывать новое окно.
<a target="_blank" href="http://wickedlysmart.com/buzz" title="Читайте все самое важное о кофеине">Все о кофеине</a>
...............
JPEG, PNG и GIF
JPEG - для фото и сложной графики,подходит для полутоновых нерастровых изображений,Отсутствует поддержка анимации.Файлы получаются меньше по размеру, что обеспечивает более быструю загрузку веб-страниц.до 16 миллионов.при уменьшении размера файла теряется некоторая информация об изображении.Не предусматривает работы с прозрачностью

PNG  - PNG подходит для изображений с несколькими чистыми цветами и таких штриховых изображений, каклоготипы, аппликации. Кроме того, его хорошо применять, если в изображении есть небольшой текст.PNG сжимает файл, чтобы уменьшить его размер, но при этом не теряется никакая информация. Таким образом, это формат «без потерь».Дает возможность установить «прозрачность» для цветов, чтобы сквозь изображение было видно все, что находится под ним.Файлы имеют тенденцию получаться больше по размеру,чем их JPEG

GIF  -   может выводить рисунки с количеством цветов, не превышающим 256.GIF тоже является форматом «без потерь».GIF тоже предусматривает работу с прозрачностью, однако дает возможность установить «прозрачность» только для одного цвета.Файлы имеют тенденцию получаться больше по размеру, чем их JPEG-эквиваленты.Поддерживает анимацию.

‹img› — строчный элемент.
Элемент без содержимого — это элемент, не имеющий содержимого на HTML-странице, которое заключено между закрывающим и открывающим тегами. Конечно, изображение — это содержимое, но элемент <img> лишь ссылается на него. Изображение само по себе не является частью HTML-страницы. Оно как бы заменяет элемент <img>, когда браузер отображает страницу.
< img src="images/drinks.gif">
<img src="http://www.starbuzzcoffee.com/images/corporate/ceo.jpg">

В большинстве браузеров есть возможность щелкнуть правой кнопкой мыши на изображении, чтобы появилось контекстное
меню. Оно будет содержать пункт Copy Image Address (Скопировать адрес изображения) или Copy Image Link (Скопировать ссылку на изображение), выбор которых позволит поместить URL-адрес в буфер обмена. Второй способ найти URL — щелкнуть правой кнопкой мыши и выбрать в меню пункт Open Image in New Window (Открыть изображение в новом окне). В результате изображение откроется в окне браузера. Затем вы сможете взять URL рисунка из адресной строки браузера.
Последний способ — использовать пункт меню браузера View Source (Посмотреть источник) и просмотреть HTML-код. Однако помните, что ссылка на изображение, которую вы найдете, может быть относительной и вам придется «реконструировать» URL, используя доменное имя сайта и путь к изображению.

Вы можете сообщить пользователю определенную информацию о том, что представляет собой изображение, благодаря атрибуту alt элемента <img>
<img src="http://wickedlysmart.com/hfhtmlcss/trivia/pencil.png" alt= "Обычный новый карандаш позволяет нарисовать линию длиной 35 миль.">

Атрибуты width и height - указ. браузеру размер фото.В обоих атрибутах размер задается в пикселах.
<img src="images/drinks.gif" width="48" height="100">

Экран монитора состоит из миллионов точек, называемых пикселами.
Концепция «CSS-пиксел». CSS-пиксел — это 1/96 дюйма (96 пикселов на дюйм) 1 дюйм = 2.54 см (международное: inch, in или ″ — двойной штрих;)

Разрешение — величина, определяющая количество точек (элементов растрового изображения) на единицу площади (или единицу длины). Более высокое разрешение (больше элементов) обычно обеспечивает более точные представления оригинала изображения.
Для изменения размера рисунка и его сохранения мы будем использовать окно Save for Web (Сохранить для Сети).Сейчас вам всего лишь нужно сохранить изображение в правильном формате (JPEG). Для этого следует выбрать данный формат и установить качество Medium (Среднее).(?)

Вы можете использовать атрибуты width и height, но это не совсем хорошая идея.В этом случае будет загружаться полноформатное изображение,а затем браузер будет менять его размер (как это делается, когда в вашем браузере включена настройка автоматического подбора изображения).

Чтобы создать изображение-ссылку, нужно поместить элемент <img> внутрь с фотографией элемента <a>, вот так:
<a href="html/seattle_downtown.html"> 
	<img src="thumbnails/seattle_downtown.jpg" alt="iPod в бизнес-центре Сиэтла, Вашингтон">
</a>

Логотип (c.226)
узор в клеточку на заднем плане - отображают прозрачные области
Для сохранения логотипа мы выберем формат GIF.(?)

(c.247 Head First-Изучаем HTML,XHTML и CSS)  -> DOCTYPE
Определение типа документа (DOCTYPE) используется, чтобы сказать браузеру, какую версию HTML вы используете.

Консорциум Всемирной паутины (W3C) — это организация, занимающаяся стандартами. Она же определяет, что такое «стандарт HTML».

W3C-валидатор (c.255) это бесплатная сервисная программа, которая проверяет страницы на соответствие стандартам.
Валидатор формата (часто просто валидатор, от англ. validator) — компьютерная программа, которая проверяет соответствие какого-либо документа, потока данных, или фрагмента кода определённому формату, проверяет синтаксическую корректность документа или файла — то есть, производит валидацию.

<meta charset="utf-8">  
<meta> для определения кодировки символов. В атрибуте charset указ. кодировку символов.
Кодировки символов дают нам способ представить все буквы, цифры и прочие символы на нашем языке в компьютере.
«utf-8» — это кодировка в семействе кодировок Unicode (одна из нескольких).
В элементе <head> всегда помещайте элемент <title>.
.............................................................................
Вы подобрали хостинговую компанию, выбрали доменное имя и получили сервер, готовый разместить ваши веб-страницы
До сих пор корневой папкой была просто папка наивысшего уровня, в которой хранились файлы для ваших страниц.
На веб-сервере значение корневой папки увеличивается, потому что все, что в ней содержится, будет доступно в Сети.
Хостинговые компании могут называть корневые папки как угодно.Главное, что вы знаете, где расположена ваша корневая папка на сервере, и можете скопировать в нее свои файлы.
Вам нужно взять все страницы с вашего компьютера и поместить их в корневую папку своего сайта, которая находится на сервере вашей хостинговой компании.
Большинство хостинговых компаний используют метод передачи файлов,называемый FTP, что означает 'протокол передачи файлов'.
FTP-клиент.
SFTP, или Secure File Transfer Protocol(протокол безопасной пересылки данных), — это более безопасная версия FTP, которая работает примерно так же. Только перед приобретением SFTP убедитесь, что выбранный FTP-клиент также поддерживает его.

Для подключения вам понадобятся имя пользователя и пароль, установленные вашей хостинговой компанией. (c.157 Head First-Изучаем HTML,XHTML и CSS)

...............................................

HTTP известен как 'протокол передачи гипертекстовых файлов'. Другими словами, это согласованный метод (протокол) для передачи гипертекстовых документов по Сети.
Веб-адреса, которые вы вводите в браузере,называются URL-адресами, или 'унифицированными указателями информационных ресурсов'.
Итак, что такое доменное имя? Это просто уникальное имя, используемое для определения места для вашего сайта.
Домен — это адрес сайта или определенная зона, которая имеет свое имя, не похожее ни на одно другое в системе доменных имен. Домены бывают разных уровней. Например, домен первого уровня обычный пользователь зарегистрировать никак не сможет, а вот второго уровня — это запросто.
Не нужно путать доменное имя с именем сайта: starbuzzcoffee.com — это доменное имя,в то время как www.starbuzzcoffee.com — название сайта.

               www.                                             starbuzzcoffee                                .com                      (www.starbuzzcoffee.com)
  Это часть имени-назв.опред.сервера в домене               Это часть доменного имени.                    "окончание" доменного имени

		http://       www.starbuzzcoffee.com/    index.html
		протокол        имя сайта                абсолютный путь

 «/»  - указание корневой папки
Когда сервер получает такой запрос,как ваш, без символа «/» в конце (http://www.starbuzzcoffee.com),и существует каталог с таким названием,то сервер сам добавит последний слеш.
Итак, если сервер получает запрос на:
                         http://www.starbuzzcoffee.com
он поменяет его на:
                         http://www.starbuzzcoffee.com/

...........................................................
Система доменных имен(Domain Name System, или сокращенно DNS) - это распределенная база данных, содержащая информацию о доменах,
их именах и IР-адресах .Данная система делает возможным использование доменных имен вместо IР-адресов.Без нее мы вынуждены были бы, например,
вместо доменного имени oreilly.соm  вводить IР-адрес 208.201.239.36.
...................................................
HTML <embed> Tag

Example
An embedded flash animation:

             <embed src="helloworld.swf">

........................................

CSS-свойство display. Два основных типа — inline и block. Другие, такие как inline-block table и прочие, появились уже позже. Отличие в том, что display:block, указывает, что ширина прямоугольника будет вычисляться в зависимости от ширины «родителя». А display:inline указывает, что ширина прямоугольника будет вычисляться в зависимости от его содержимого. Если в элементе два слова, ширина прямоугольника будет равна ширине, необходимой для вывода этих слов. Inline-элементы выстраиваются друг за другом. А блочные элементы — друг под другом.
Следующее, что влияет на компоновку элемента, — свойства position и float. Position по умолчанию static, при этом прямоугольник идет в стандартном потоке компоновки. Также есть position:relative и position:absolute. Position:relative указывает, что прямоугольнику выделяется место в стандартном потоке компоновки. При этом позиция элемента может быть сдвинута относительно этого места: влево, вправо, вверх, вниз с помощью соответствующего свойства.
Абсолютное позиционирование, к которому относится position:absolute и position:fixed, указывает, что элемент выходит за пределы своего прямоугольника из общего потока компоновки. Остальные прямоугольники его не учитывают. Он также не учитывает соседние элементы. Координаты его вычисляются относительно корневого элемента страницы, либо относительно предка, у которого position не static. Размеры же вычисляются тоже относительно родителя. Также на позиционирование влияет свойство float. Оно указывает, что наш прямоугольник идет в стандартном потоке, но при этом занимает либо крайнюю левую, либо крайнюю правую позиции. При этом все остальные прямоугольники «обтекают» этот элемент.
...............CSS..................
У вас имеется особый ШРИФТ, который вы хотите ДОБАВИТЬ в свою страницу? (c.343)
Вам потребуется самим разместить свои файлы шрифтов в Интернете, чтобы они стали доступны для браузеров ваших пользователей. Либо вы можете воспользоваться одной из множества онлайн-служб шрифтов, обеспечивающих хостинг таких файлов.
Правило @font-face дает команду браузеру загружать файлы шрифтов, используя URL-адреса в scr.Браузер будет загружать все файлы, URL-адреса которых указаны в scr, пока не найдет файл шрифта,который он поддерживает. После загрузки шрифту будет присвоено имя, указанное в свойстве font-family, — в данном случае это имя «Emblema One».
У нас имеются URL-адреса версий .woff и .ttf шрифта под названием «Emblema One», поэтому теперь мы можем переходить к добавлению правила @font-face в наш файл j..l.css. Добавьте правило @font-face в верхушку данного файла, разместив его над правилом body:
@font-face {
	font-family: "Emblema One";
	src: url("http://wickedlysmart.com/hfhtmlcss/chapter8/journal/EmblemaOne-Regular.woff"),
	     url("http://wickedlysmart.com/hfhtmlcss/chapter8/journal/EmblemaOne-Regular.ttf");
}

Загрузив шрифт в браузер с помощью правила @font-face, вы можете приступать к использованию данного шрифта, ссылаясь на его имя, которое вы указали для него в свойстве font-family.

h1 {
font-family: "Emblema One", sans-serif;       //  "Emblema One" - имя шрифта,  sans-serif - если что-то не так, резервный вар-т
}

Cчитайте @font-face встроенным CSS-правилом,а не правилом, действующим как селектор. Вместо того чтобы выбирать элемент, правило @font-face позволяет
вам извлечь веб-шрифт и присвоить ему имя, указанное в font-family. Символ @ в начале является указателем на то, что это необычное CSS-правило.
Двумя распространенными встроенными правилами, с которыми вы будете сталкиваться, являются @import, позволяющее импортировать дополнительные CSS-файлы (вместо <link> в вашем HTML-коде), и @media, дающее возможность создавать CSS-правила, специфичные для определенных медиатипов.
Недостаток: Во-первых, извлечение веб-шрифтов требует времени, в силу чего скорость загрузки вашей страницы может снизиться при их первом извлечении. Кроме того, управлять большим количеством шрифтов нелегко. И наконец, вы можете столкнуться с мобильными и небольшими по размеру устройствами, которые их не поддерживают, поэтому
всегда предусматривайте в своем коде альтернативные варианты шрифтов.
font-size - размер
font-weight - насыщенность
font-style - стиль
background-color ?   color
text-decoration - Декорирование
line-height позволяет задать межстрочный интервал для вашего текста

















....................................................
	<head>  
	<link rel="stylesheet" type="text/css" href="mystyle.css">
	</head>

Colors in CSS are most often specified by:

	a valid color name - like "red"
	an RGB value - like "rgb(255, 0, 0)"
	a HEX value - like "#ff0000"

CSS background properties:

	background-color
	background-image
	background-repeat
	background-attachment
	background-position

		body {
		    background-image: url("paper.gif");
		}
Свойство background-position устанавливает месторасположение изображения и может быть
задано в пикселах, процентах или с помощью таких ключевых слов, как top, left, right, bottom и center.

По умолчанию фоновое изображение «замощает» фон элемента или повторяется по горизонтали и по вертикали снова и снова, пока не заполнит все пространство. 
Свойство background-repeat контролирует, как именно происходит это повторение.
background-repeat - Определяет, как будет повторяться фоновое изображение, установленное с помощью свойства background-image. Можно установить повторение рисунка только по горизонтали, по вертикали или в обе стороны. В CSS3 допустимо указывать несколько значений для каждого фона, перечисляя значения через запятую
background-repeat: <повторение> [ , <повторение> ]* 
Допустимо указывать два значения, первое ключевое слово задаёт повторение по горизонтали, второе по вертикали.

Значения
	no-repeat
	Устанавливает одно фоновое изображение в элементе без его повторений, положение которого определяется свойством background-position (по умолчанию в левом верхнем углу).
        Аналогично no-repeat no-repeat.
	repeat
	Фоновое изображение повторяется по горизонтали и вертикали. Аналогично repeat repeat.
	repeat-x
	Фоновый рисунок повторяется только по горизонтали. Аналогично repeat no-repeat.
	repeat-y
	Фоновый рисунок повторяется только по вертикали. Аналогично no-repeat repeat.
	inherit
	Наследует значение родителя.
	space
	Изображение повторяется столько раз, чтобы полностью заполнить область; если это не удаётся, между картинками добавляется пустое пространство.
	round
	Изображение повторяется так, чтобы в области поместилось целое число рисунков; если это не удаётся сделать, то фоновые рисунки масштабируются.

	<style type="text/css">
	   body { 
	    background-image: url(images/bg_grey.png); /* Путь к фоновому рисунку */
	    background-position: left bottom; /* Положение фона */
	    background-repeat: repeat-x; /* Повторяем фон по горизонтали */
	   }
	  </style>

	<style>
	   body {
	    background-image: url(images/pattern-left.png), url(images/pattern-right.png);
	    background-position: left, right;
	    background-repeat: repeat-y, repeat-y;
	   }
	  </style>

............background-attachment   
Свойство background-attachment устанавливает, будет ли ПРОКРУЧИВАТЬСЯ фоновое изображение вместе с содержимым элемента. Изображение может быть ЗАФИКСИРОВАНО и оставаться неподвижным, либо перемещаться совместно с документом. В CSS3 можно указать несколько значений для ряда фоновых изображений, перечисляя значения через запятую.

начения
	fixed
	Делает фоновое изображение элемента неподвижным.
	scroll
	Позволяет перемещаться фону вместе с содержимым.
	inherit
	Наследует значение родителя.
	local
	Фон фиксируется с учётом поведения элемента. Если элемент имеет прокрутку, то фон будет прокручиваться вместе с содержимым, но фон выходящий за рамки элемента остаётся
        на месте.

		<style>
		   body {
		    background-image: url(images/help.png); /* Путь к фоновому изображению */
		    background-attachment: fixed; /* Фиксируем фон веб-страницы */
		   }
		  </style>

.......................................
Background - Shorthand property
To shorten the code, it is also possible to specify all the background properties in one single property. This is called a shorthand property.

The shorthand property for background is background:

Example
	body {
	    background: #ffffff url("img_tree.png") no-repeat right top;
	}

When using the shorthand property the order of the property values is:

	background-color
	background-image
	background-repeat
	background-attachment
	background-position

It does not matter if one of the property values is missing, as long as the other ones are in this order.

Универсальное свойство background позволяет установить одновременно до пяти характеристик фона. Значения могут идти в любом порядке, браузер сам определит, какое из них соответствует нужному свойству. Для подробного ознакомления смотрите информацию о каждом свойстве отдельно. В CSS3 допустимо указывать параметры сразу нескольких фонов, перечисляя их через запятую.
Синтаксис
CSS2.1	
background: [background-attachment || background-color || background-image 
  || background-position || background-repeat] | inherit
CSS3	
background: [<фон>, ]* <последний_фон>

Здесь:

<фон> = [background-attachment || background-image || background-position || background-repeat] | inherit

<последний_фон> = [background-attachment || background-color || background-image || background-position || background-repeat] | inherit

Если наряду с фоновыми изображениями требуется задать цвет фона элемента, он указывается в последнюю очередь после перечисления.

Значения
Любые комбинации пяти значений, разделяемых между собой пробелом, определяющих стиль фона, в произвольном порядке. Ни одно значение не является обязательным, поэтому неиспользуемые можно опустить. inherit наследует значение у родительского элемента.

<style type="text/css">
   div {
    height: 200px; /* Высота блока */
    width: 200px; /* Ширина блока */
    overflow: auto; /* Добавляем полосы прокрутки */
    padding-left: 15px; /* Отступ от текста слева */
    background: url(images/hand.png) repeat-y #fc0; /* Цвет фона, 
                                                    путь к фоновому изображению и 
                                                    повторение фона по вертикали */
   }
  </style>

.....................................
.....................................Borders
Border Style
	dotted - Defines a dotted border
	dashed - Defines a dashed border
	solid - Defines a solid border
	double - Defines a double border
	groove - Defines a 3D grooved border. The effect depends on the border-color value
	ridge - Defines a 3D ridged border. The effect depends on the border-color value
	inset - Defines a 3D inset border. The effect depends on the border-color value
	outset - Defines a 3D outset border. The effect depends on the border-color value
	none - Defines no border
	hidden - Defines a hidden border



 none
Не отображает границу и ее толщина (border-width) задается нулевой.
 hidden
Имеет тот же эффект, что и none за исключением применения border-style к ячейкам таблицы, у которой значение свойства border-collapse установлено как collapse. В этом случае вокруг ячейки граница не будет отображаться вообще.
 inherit
Наследует значение родителя.

Разрешается использовать одно, два, три или четыре значения, разделяя их между собой пробелом. 
Число значений	                            Результат

  1	                                   Стиль границы будет задан для всех сторон элемента.
  2	                                   Первое значение устанавливает стиль верхней и нижней границы, второе — левой и правой.
  3	                                   Первое значение задает стиль верхней границы, второе — одновременно левой и правой границы, а третье — нижней границы.
  4	                                   Поочередно устанавливается стиль верхней, правой, нижней и левой границы.

	p.hidden {border-style: hidden;}
	p.mix {border-style: dotted dashed solid double;}

......... border-width - property specifies the width of the four borders.(ТОЛЩИНА границы)
The width can be set as a specific size (in px, pt, cm, em, etc) or by using one of the three pre-defined values: thin, medium, or thick.

	p.one {
	    border-style: solid;
	    border-width: 5px;
	}

	p.two {
	    border-style: solid;
	    border-width: medium;
	}

	p.three {
	    border-style: solid;
	    border-width: 2px 10px 4px 20px;
	}
..........border-color

p.three {
    border-style: solid;
    border-color: red green blue yellow;
}

.........Border - Individual Sides
Example
p {
    border-top-style: dotted;
    border-right-style: solid;
    border-bottom-style: dotted;
    border-left-style: solid;
}

 the border-style property has four values:

			border-style: dotted solid double dashed;
	top border is dotted
	right border is solid
	bottom border is double
	left border is dashed

If the border-style property has three values:

			border-style: dotted solid double;
	top border is dotted
	right and left borders are solid
	bottom border is double

If the border-style property has two values:

			border-style: dotted solid;
	top and bottom borders are dotted
	right and left borders are solid

If the border-style property has one value:

			border-style: dotted;
	all four borders are dotted

The border-style property is used in the example above. However, it also works with border-width and border-color.

................The border property is a shorthand property for the following individual border properties:

	border-width
	border-style (required)
	border-color

Example
		p {
		    border: 5px solid red;
		}

.......................

http://htmlbook.ru/blog/kak-izmenit-razmer-fonovoi-kartinki-cherez-css3

В CSS 2.1 фоновая картинка, применяемая к контейнеру, сохраняет свои фиксированные размеры. К счастью, в CSS3 введено свойство background-size, с помощью которого фон может быть растянут или сжат. Оно идеально подходит, если вы создаёте шаблон для адаптивного веб-дизайна.

Абсолютное изменение размера
Могут применяться единицы измерения.

                        background-size: ширина высота;
По умолчанию ширина и высота установлена как auto, что оставляет исходные размеры изображения.

Вы можете задать новый размер изображения с помощью абсолютных единиц измерения, таких как px, em, cm и др. Пропорции изменятся, если это необходимо. Например, если наша фоновая картинка имеет размеры 200×200 пикселов, то следующий код оставит эту высоту, но сделает ширину в два раза меньше:

background-size: 100px 200px;
Если указано только одно значение, оно считается шириной. Высота устанавливается как auto и сохраняются пропорции:

background-size: 100px;
  /* аналогично */
background-size: 100px auto;
Данный код масштабирует изображение с 200×200 до 100×100 пикселов.

Относительное изменение размера через проценты
Если применяются проценты, размеры основываются на элементе, а НЕ изображении:

background-size: 50% auto;
Ширина фонового изображения, таким образом, зависит от размеров контейнера. Если у контейнера ширина 500px, то размер нашего изображения уменьшится до 250×250.

Использование процентов может быть полезно для адаптивного дизайна. Поменяйте ширину демонстрационной страницы чтобы понять, как изменяются размеры.
Масштабирование до максимального размера
Свойство background-size также понимает ключевое слово contain. Оно масштабирует изображение таким образом, чтобы оно заполняло контейнер. Другими словами, изображение будет увеличиваться или уменьшаться пропорционально, но ширина и высота не будут превышать размеры контейнера:

background-size: contain;

....................................

border-radius: <радиус>{1,4} [ / <радиус>{1,4}]

border-top-left-radius: 3em;
border-top-right-radius: 0em;
border-bottom-right-radius: 3em;
border-bottom-left-radius: 3em;
...............................................
 <head>
	<meta charset="utf-8">
	<title>Гостевая Head First</title>
		<link type="text/css" href="corporate.css" rel="stylesheet" />
		<link type="text/css" href="beverage-division.css" rel="stylesheet"/>
		<link type="text/css" href="lounge-seattle.css" rel="stylesheet"/>
 </head>
.....................................

c.416
Существует еще одна причина, по которой вам может потребоваться использовать НЕСКОЛЬКО таблиц стилей: допустим, вы хотите приспособить стили оформления своей страницы под типы устройств, на экранах которых она будет отображаться (настольные компьютеры,ноутбуки, планшетные компьютеры, смартфоны или даже печатные версии ваших страниц).
Для этого существует атрибут media, который вы можете добавить в элемент <link>, допускающий применение только тех таблиц стилей, которые соответствуют устройству пользователя.

С помощью атрибута media можно указать тип устройства, для которого предназначена данная таблица стилей.
<link href="lounge-mobile.css" rel="stylesheet" media="screen and (max-device-width: 480px)">

screen - десь в нашем запросе указывается что-либо имеющее экран (в отличие от, например, принтера, 3D-очков или устройства чтения для слепых)...
max-device-width: 480px  - ...и любое устройство,максимальная ширина экрана которого составляет 480 пикселов.

Аналогичным образом можно создать запрос, соответству-
ющий такому устройству, как принтер:  <link href="lounge-print.css" rel="stylesheet" media="print">

Существует целый ряд свойств, которые вы можете применять в своих запросах, 
например min-device-width, max-device-width (которое мы только что использовали), 
orientation (ориентация дисплея — альбомная или портретная) и др. И не забывайте, что вы можете добавить столько тегов <link> в свой HTML-код, сколько будет необходимо для
того, чтобы охватить все необходимые вам устройства.

Существует еще один способ нацелить ваш CSS-код на устройства с определенными характеристиками: вместо того чтобы использовать медиазапросы в тегах <link>,
вы также можете поместить их прямо в свой CSS-код. Вот пример:

 @media screen and (min-device-width: 481px) {
	#guarantee {
		margin-right: 250px;
	}
 }
Таким образом, эти правила будут применяться, если ширина экрана окажется больше 480 пикселов...

@media print {
     body {
      font-family: Times, "Times New Roman", serif;              //...а эти правила будут применяться при распечатке страницы.
     }
}

Итак, все это работает следующим образом: в правило @media включаются только те CSS-правила, которые специфичны для требуемого типа устройств. Все правила, являющиеся общими для всех типов устройств, располагаются в CSS-файле под правилами, включенными в @media, благодаря чему у нас нет каких-либо повторяющихся без необходимости правил. И когда браузер будет загружать страницу,он посредством медиазапросов определит соответствующие этой странице правила и будет игнорировать все правила, которые к ним не относятся.
Есть ли другие медиасвойства помимо max-device-width и mindevice-width?
Да, их много, включая max-width и min-width (отличные от device-width, в чем вы скоро убедитесь), max-height и min-height, orientation, color, aspect-ratio и др.
Все подробности вы сможете найти в спецификации медиазапроов CSS3 (http://www.w3.org/TR/css3-mediaqueries/), а примеры —
в книге «Head First Mobile Web» (« Разработка веб-приложений для мобильных устройств »).
Однако следует отметить,что если вы поместите все свои правила в один файл, разделив их посредством правил @media, то объем вашего CSS может стать
большим. Используя разные элементы <link> для разных типов устройств, вы сможете упорядочить свой CSS по разным файлам в зависимости от типа устройств.

.......................................

Определим логические разделы

По умолчанию для блочных элементов используется автоширина. Это означает,что элемент будет растянут ровно настоль-
ко, сколько есть свободного места.
Свойство text-align выравнивает все строчное содержимое блочного элемента.Просто помните, что text-align действует вопреки своему имени и работает со всеми строчными элементами. И еще запомните следующее:свойство text-align можно задавать только для блочных элементов. Оно не сработает, если применить его напрямую к строчному элементу (например, к <img>).

Потомки (с.451)452  ????
#elixirs h2 - cелектор #elixirs h2 выбирает ВСЕХ потомков элемента с идентификатором elixirs, так что <h2> может являться непосредственно дочерним
элементом элемента <div> или может быть вложен в <blockquote> или другой <div> (что сделает его внуком) и т. д. Итак, селектор потомка выбирает и элементы <h2>, вло-
женные в другие элементы, независимо от того, как глубоко они вложены.

#elixirs > h2, чтобы выбрать только те <h2>,которые являются непосредственными детьми элемента с идентификатором elixirs.(выбрать только дочерний элемент (не выби-
рая внуков, правнуков и т. д.)?)

#elixirs blockquote h2 - Таким образом будут выбраны элементы <h2>, являющиеся потомками элементов <blockquote>, которые в свою очередь являются потомками элемента с идентифи-
катором elixirs.

div + p - Selects all <p> elements that are placed immediately after <div> elements
p ~ ul - Selects every <ul> element that are preceded by(предшествует)a <p> element
Элементы <span> дают возможность логически выделить строчное содержимое аналогично тому, как элементы <div> позволяют создать логическое выделение содержимого блочного уровня.

Псевдокласс
#elixirs a:visited {
	color: #3 33333;
}
......................
Что это за каскады в каскадных таблицах стилей.
посчитать приоритет (c.474)

	Имеются ли в селекторе какие-нибудь          Имеются ли в селекторе какие-либо классы или                        Имеются ли в селекторе названия какихнибудь элементов?
	идентификаторы? По одному баллу за            псевдоклассы? По одному баллу за каждый.                             По одному баллу за каждое.
	каждый.										
	                                               0 0 0					                                                        
															
																	
	h1.greentea   0 1 1          	         ol li p        0 0 3    		em           0 0 1
	p img         0 0 2 			 .green         0 1 0 			span.cd      0 1 1
	a:link        0 1 1			 #elixirs h1    1 0 1 		        #sidebar     1 0 0
																	
Просто читайте их как обыкновенные числа: 100 (сто) больше чем 010 (десять),
что, в свою очередь, больше, чем 001 (один), и т. д.
Как насчет правила h1, h2? Каков его приоритет? Рассматривайте это правило как два отдельных: правило h1, имеющее число приоритета 001, и правило h2 с числом приоритета 001.

>>>>>>>>>>>>>>>>>>>>>>>>>   The position Property >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

static  // является значением по умолчанию. Элемент с position: static; отображается как обычно и не будет позиционироваться каким-либо специальным способом, он просто плюхнется вниз.

relative     //Положение элемента устанавливается относительно его исходного места. Добавление свойств left, top, right и bottom изменяет позицию элемента и сдвигает его в ту или иную сторону от первоначального расположения.
relative ведет себя в точности как static но лишь до тех пор, пока вы не добавите некоторые дополнительные свойства.
Добавление свойств top, right, bottom, и left изменяет позицию элемента, сдвигая его в ту или иную сторону относительно его начального расположения. Другой контент не будет перестраиваться, чтобы заполнить любое свободное пространство, оставленное этим элементом.

fixed  //Фиксированное позиционирование элемента относительно окна браузера таково, что он всегда занимает одно и тоже место даже при прокрутке страницы, словно он приклеен к экрану. Также как и для relative, дополнительные свойства top, right, bottom, и left для данного позиционирования будут работать.
Фиксированный элемент не оставляет за собой свободное пространство на странице, где он был расположен.

У мобильных браузеров достаточно шаткая поддержка фиксированного позиционирования. 

absolute  // наиболее сложное значение позиционирования. absolute ведет себя как fixed за исключением того, что позиционирование отсчитывается относительно ближайшего расположенного родителя а не относительно окна браузера. Если элемент абсолютно позиционирован и не имеет родителя,то он использует тело документа и продолжает двигатся вместе со всей страницей при скроллинге. Помните , что "позиционированный" элемент - это элемент с любым значением свойства position кроме значения static.

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  float and clear >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
The float property specifies whether or not an element should float.

The clear property is used to control the behavior of floating elements.

<!DOCTYPE html>
<html>
<head>
<style>
.div1 {
    float: left;
    width: 100px;
    height: 50px;
    margin: 10px;
    border: 3px solid #73AD21;
}

.div2 {
    border: 1px solid red;
}


.div3 {
    float: left;
    width: 100px;
    height: 50px;
    margin: 10px;
    border: 3px solid #73AD21;
}

.div4 {
    border: 1px solid red;
    clear: left;
}
</style>
</head>
<body>

<h2>Without clear</h2>
<div class="div1">div1</div>
<div class="div2">div2 - Notice that the div2 element is after div1, in the HTML code. However, since div1 is floated to the left, this happens: the text in div2 is floated around div1, and div2 surrounds the whole thing.</div>

<h2>Using clear</h2>
<div class="div3">div3</div>
<div class="div4">div4 - Using clear moves div4 down below the floated div3. The value "left" clears elements floated to the left. You can also clear "right" and "both".</div>

</body>
</html>

..............
The clearfix Hack - overflow: auto;

.clearfix {
    overflow: auto;
}

>>>>>>>>>>>>>>>>>>>>>>>>>>>>  media queries  >>>>>>>>>>>>>>>>>>>>>>>>>
"Отзывчивый дизайн" является стратегией, делающей сайт адаптированным к размеру браузера любого устройства, на котором он показывается... эта стратегия позволяет выглядеть сайту здорово несмотря ни на что.

Media queries являются наиболее мощным инструментом для этого.

<!-- CSS media query on a link element -->
<link rel="stylesheet" media="(max-width: 800px)" href="example.css" />

<!-- CSS media query within a stylesheet -->
<style>
@media (max-width: 600px) {
  .facet_sidebar {
    display: none;
  }
}
</style>

/////////////////////////////////////////////////
Устанавливает связь с внешним документом вроде файла со стилями или со шрифтами. Элемент <link> обычно размещается внутри контейнера <head> и не создаёт ссылку, в отличие от элемента <a>.

Синтаксис:

<head>
  <link атрибуты>
</head>

Закрывающий тег не требуется.

Атрибуты

charset  Кодировка связываемого документа. 
href     Путь к связываемому файлу. 
media    Определяет устройство, для которого следует применять стилевое оформление.
rel      Определяет отношения между текущим документом и файлом, на который делается ссылка.
sizes    Указывает размер иконок для визуального отображения. 
type     MIME-тип данных подключаемого файла.
Также для этого элемента доступны универсальные атрибуты.

Пример

	<!DOCTYPE HTML>
	<html>
	  <head>
	   <meta charset="utf-8">
	   <title>LINK</title>  
	   <link rel="stylesheet" href="ie.css">
	   <link rel="alternate" type="application/rss+xml" 
	     title="Статьи с сайта webref.ru" href="http://webref.ru/rss.xml"> 
	   <link rel="shortcut icon" href="http://webref.ru/favicon.ico">
	  </head> 
	  <body>
	    <p>...</p>
	  </body>
	</html>

В данном примере подключается внешний файл со стилями с помощью атрибута rel="stylesheet" тега <link>, указывается RSS-документ текущего сайта (link rel="alternate" type="application/rss+xml") и устанавливается иконка сайта в адресной строке браузера (link rel="shortcut icon").


//////////////////////////////////// HTML //////////////
HTML              Hyper Text Markup Language

The <!DOCTYPE html> declaration defines this document to be HTML5
The text between <html> and </html> describes an HTML document
The text between <head> and </head> provides information about the document
The text between <title> and </title> provides a title for the document
The text between <body> and </body> describes the visible page content
The text between <h1> and </h1> describes a heading
The text between <p> and </p> describes a paragraph

<a href="http://www.w3schools.com">This is a link</a>

The source file (src), alternative text (alt), and size (width and height) are provided as attributes:
<img src="w3schools.jpg" alt="W3Schools.com" width="104" height="142">

<br>

<hr>


<pre> </pre>

HTML Attributes
All HTML elements can have attributes
Attributes provide additional information about an element
Attributes are always specified in the start tag
Attributes usually come in name/value pairs like: name="value"


<!DOCTYPE html>
<html lang="en-US">
<body>
...

Here, a title attribute is added to the <p> element. The value of the title attribute will be displayed as a tooltip when you mouse over the paragraph:

<p title="I'm a tooltip">
This is a paragraph.
</p>


Use the style attribute for styling HTML elements
Use background-color for background color
Use color for text colors
Use font-family for text fonts
Use font-size for text sizes
Use text-align for text alignment

<h1 style="color:blue;">This is a heading</h1>
<p style="font-size:160%;">This is a paragraph.</p>

HTML Formatting Elements
In the previous chapter, you learned about the HTML style attribute.

HTML also defines special elements for defining text with a special meaning.

HTML uses elements like <b> and <i> for formatting output, like bold or italic text.

Formatting elements were designed to display special types of text:

<b> - Bold text
<strong> - Important text
<i> - Italic text
<em> - Emphasized text
<mark> - Marked text
<small> - Small text
<del> - Deleted text
<ins> - Inserted text
<sub> - Subscript text
<sup> - Superscript text



<!-- Write your comments here -->

Conditional Comments
You might stumble upon conditional comments in HTML:

<!--[if IE 8]>
    .... some HTML here ....
<![endif]-->


CSS can be added to HTML elements in 3 ways:

Inline - by using the style attribute in HTML elements
Internal - by using a <style> element in the <head> section
External - by using an external CSS file

Use the HTML style attribute for inline styling
Use the HTML <style> element to define internal CSS
Use the HTML <link> element to refer to an external CSS file
Use the HTML <head> element to store <style> and <link> elements
Use the CSS color property for text colors
Use the CSS font-family property for text fonts
Use the CSS font-size property for text sizes
Use the CSS border property for borders
Use the CSS padding property for space inside the border
Use the CSS margin property for space outside the border

<style>
a:link    {color:green; background-color:transparent; text-decoration:none}
a:visited {color:pink; background-color:transparent; text-decoration:none}
a:hover   {color:red; background-color:transparent; text-decoration:underline}
a:active  {color:yellow; background-color:transparent; text-decoration:underline}
</style>

The target attribute specifies where to open the linked document.

The target attribute can have one of the following values:

_blank - Opens the linked document in a new window or tab
_self - Opens the linked document in the same window/tab as it was clicked (this is default)
_parent - Opens the linked document in the parent frame
_top - Opens the linked document in the full body of the window
framename - Opens the linked document in a named frame


The target attribute specifies where to open the linked document.

The target attribute can have one of the following values:

_blank - Opens the linked document in a new window or tab
_self - Opens the linked document in the same window/tab as it was clicked (this is default)
_parent - Opens the linked document in the parent frame
_top - Opens the linked document in the full body of the window
framename - Opens the linked document in a named frame




Use the HTML <img> element to define an image
Use the HTML src attribute to define the URL of the image
Use the HTML alt attribute to define an alternate text for an image, if it cannot be displayed
Use the HTML width and height attributes to define the size of the image
Use the CSS width and height properties to define the size of the image (alternatively)
Use the CSS float property to let the image float
Use the HTML <map> element to define an image-map
Use the HTML <area> element to define the clickable areas in the image-map
Use the HTML <img>'s element usemap attribute to point to an image-map

An HTML table is defined with the <table> tag.

Each table row is defined with the <tr> tag. A table header is defined with the <th> tag. By default, table headings are bold and centered. A table data/cell is defined with the <td> tag.

<table style="width:100%">
  <tr>
    <th>Firstname</th>
    <th>Lastname</th> 
    <th>Age</th>
  </tr>
  <tr>
    <td>Jill</td>
    <td>Smith</td> 
    <td>50</td>
  </tr>
  <tr>
    <td>Eve</td>
    <td>Jackson</td> 
    <td>94</td>
  </tr>
</table>


Use the HTML <table> element to define a table
Use the HTML <tr> element to define a table row
Use the HTML <td> element to define a table data
Use the HTML <th> element to define a table heading
Use the HTML <caption> element to define a table caption
Use the CSS border property to define a border
Use the CSS border-collapse property to collapse cell borders
Use the CSS padding property to add padding to cells
Use the CSS text-align property to align cell text
Use the CSS border-spacing property to set the spacing between cells
Use the colspan attribute to make a cell span many columns
Use the rowspan attribute to make a cell span many rows
Use the id attribute to uniquely define one table


<ul style="list-style-type:disc">
  <li>Coffee</li>
  <li>Tea</li>
  <li>Milk</li>
</ul>

The CSS list-style-type property is used to define the style of the list item marker:

Value	Description
disc	Sets the list item marker to a bullet (default)
circle	Sets the list item marker to a circle
square	Sets the list item marker to a square
none	The list items will not be marked


<ol type="1">
  <li>Coffee</li>
  <li>Tea</li>
  <li>Milk</li>
</ol>

The type attribute of the <ol> tag, defines the type of the list item marker:

Type	Description
type="1"	The list items will be numbered with numbers (default)
type="A"	The list items will be numbered with uppercase letters
type="a"	The list items will be numbered with lowercase letters
type="I"	The list items will be numbered with uppercase roman numbers
type="i"	The list items will be numbered with lowercase roman numbers


HTML Description Lists
HTML also supports description lists.

A description list is a list of terms, with a description of each term.

The <dl> tag defines the description list, the <dt> tag defines the term (name), and the <dd> tag describes each term: 

Example
<dl>
  <dt>Coffee</dt>
  <dd>- black hot drink</dd>
  <dt>Milk</dt>
  <dd>- white cold drink</dd>
</dl>


Nested HTML Lists
List can be nested (lists inside lists):

Example
<ul>
  <li>Coffee</li>
  <li>Tea
    <ul>
      <li>Black tea</li>
      <li>Green tea</li>
    </ul>
  </li>
  <li>Milk</li>
</ul>

Horizontal Lists
HTML lists can be styled in many different ways with CSS.

One popular way is to style a list horizontally, to create a menu:

Example
<!DOCTYPE html>
<html>
<head>
<style>
ul {
    list-style-type: none;
    margin: 0;
    padding: 0;
    overflow: hidden;
    background-color: #333333;
}

li {
    float: left;
}

li a {
    display: block;
    color: white;
    text-align: center;
    padding: 16px;
    text-decoration: none;
}

li a:hover {
    background-color: #111111;
}
</style>
</head>
<body>

<ul>
  <li><a class="active" href="#home">Home</a></li>
  <li><a href="#news">News</a></li>
  <li><a href="#contact">Contact</a></li>
  <li><a href="#about">About</a></li>
</ul>

</body>
</html>

Chapter Summary
Use the HTML <ul> element to define an unordered list
Use the CSS list-style-type property to define the list item marker
Use the HTML <ol> element to define an ordered list
Use the HTML type attribute to define the numbering type
Use the HTML <li> element to define a list item
Use the HTML <dl> element to define a description list
Use the HTML <dt> element to define the description term
Use the HTML <dd> element to define the description data
Lists can be nested inside lists
List items can contain other HTML elements
Use the CSS property float:left or display:inline to display a list horizontally




An iframe is used to display a web page within a web page.
<iframe src="URL"></iframe>

<iframe src="demo_iframe.htm" height="200" width="300"></iframe>

Iframe - Target for a Link
An iframe can be used as the target frame for a link.

The target attribute of the link must refer to the name attribute of the iframe:

Example
<iframe src="demo_iframe.htm" name="iframe_a"></iframe>

<p><a href="http://www.w3schools.com" target="iframe_a">W3Schools.com</a></p>




The <noscript> tag is used to provide an alternate content for users that have disabled scripts in their browser or have a browser that doesn't support client-side scripts:





The <link> element is used to link to external style sheets:
<link rel="stylesheet" href="mystyle.css">




The HTML <meta> Element
The <meta> element is used to specify which character set is used, page description, keywords, author, and other metadata.

Metadata is used by browsers (how to display content), by search engines (keywords), and other web services.

Define the character set used:
<meta charset="UTF-8">

Define a description of your web page:
<meta name="description" content="Free Web tutorials">

Define keywords for search engines:
<meta name="keywords" content="HTML, CSS, XML, JavaScript">

Define the author of a page:
<meta name="author" content="Hege Refsnes">

Refresh document every 30 seconds:
<meta http-equiv="refresh" content="30">

Example of <meta> tags:

Example
<meta charset="UTF-8">
<meta name="description" content="Free Web tutorials">
<meta name="keywords" content="HTML,CSS,XML,JavaScript">
<meta name="author" content="Hege Refsnes">



HTML Layout Elements
Websites often display content in multiple columns (like a magazine or newspaper).

HTML5 offers new semantic elements that define the different parts of a web page:

HTML5 Semantic Elements	
<header> - Defines a header for a document or a section
<nav> - Defines a container for navigation links
<section> - Defines a section in a document
<article> - Defines an independent self-contained article
<aside> - Defines content aside from the content (like a sidebar)
<footer> - Defines a footer for a document or a section
<details> - Defines additional details
<summary> - Defines a heading for the <details> element


HTML Layout Technics
There are four different ways to create multicolumn layouts. Each way has its pros and cons:

HTML tables
CSS float property
CSS framework
CSS flexbox




HTML Entities
Some characters are reserved in HTML.

If you use the less than (<) or greater than (>) signs in your text, the browser might mix them with tags.

Character entities are used to display reserved characters in HTML.

A character entity looks like this:

&entity_name;
OR

&#entity_number;


To display a less than sign (<) we must write: &lt; or &#60;


HTML Symbols
Char	Number	Entity	Description
©	&#169;	&copy;	COPYRIGHT SIGN
®	&#174;	&reg;	REGISTERED SIGN
€	&#8364;	&euro;	EURO SIGN
™	&#8482;	&trade;	TRADEMARK

...





What is Character Encoding?
ASCII was the first character encoding standard (also called character set). ASCII defined 127 different alphanumeric characters that could be used on the internet: numbers (0-9), English letters (A-Z), and some special characters like ! $ + - ( ) @ < > .

ANSI (Windows-1252) was the original Windows character set, with support for 256 different character codes.

ISO-8859-1 was the default character set for HTML 4. This character set also supported 256 different character codes.

Because ANSI and ISO-8859-1 were so limited, the default character encoding was changed to UTF-8 in HTML5.

UTF-8 (Unicode) covers almost all of the characters and symbols in the world.

All HTML 4 processors also support UTF-8 encoding.








The HTML charset Attribute
To display an HTML page correctly, a web browser must know the character set used in the page.

This is specified in the <meta> tag:

For HTML4:
<meta http-equiv="Content-Type" content="text/html;charset=ISO-8859-1">
For HTML5:
<meta charset="UTF-8">

If a browser detects ISO-8859-1 in a web page, it defaults to ANSI, because ANSI is identical to ISO-8859-1 except that ANSI has 32 extra characters.












/////////////////////////////   CSS //////////////////////////////

















